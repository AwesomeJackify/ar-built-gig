---
import Layout from "../layouts/Layout.astro";
import { Image } from "astro:assets";
import config from "../config.json";
import { Cloudinary } from "@cloudinary/url-gen";
import { Resize } from "@cloudinary/url-gen/actions/resize";

import Hero from "../components/Hero";
import Gallery from "../components/Gallery";

import bioImg1 from "../assets/images/bio/bio1.jpg";
import bioImg3 from "../assets/images/bio/bio3.jpg";

const fields = [
  { name: "firstName", text: "First Name" },
  { name: "lastName", text: "Last Name" },
  { name: "email", text: "Email" },
  { name: "message", text: "Message" },
];

const cld = new Cloudinary({
  cloud: {
    cloudName: import.meta.env.CLOUDINARY_CLOUD_NAME,
  },
});

const introVideo = cld.video("ar-built/intro_qma8pl");
introVideo.resize(Resize.scale().width(1920));
const introVideoURL = introVideo.toURL();

const project1Video = cld.video("ar-built/project1_a2dmrf");
project1Video.resize(Resize.scale().width(800));
const project1VideoURL = project1Video.toURL();
const project2Video = cld.video("ar-built/project2_m2oseo");
project2Video.resize(Resize.scale().width(800));
const project2VideoURL = project2Video.toURL();

const projects = [
  {
    url: project1VideoURL,
    title: "588 Te Atatu Road",
    description: "20 townhouse project in Te Atatu.",
    link: "/projects/project-1",
  },
  {
    url: project2VideoURL,
    title: "Curved Deck",
    description:
      "A residential project in the Ponsonby area that offers the very best of urban life.",
    link: "/projects/curved-deck",
  },
];
---

<Layout title={config.businessName}>
  <div
    id="loader"
    class="fixed top-0 left-0 w-full h-screen bg-secondary z-50 flex flex-col items-center justify-center"
  >
    <div class="flex items-baseline">
      <h1 class="font-koulen text-9xl text-center max-md:text-4xl">
        {config.businessName}
      </h1>
      <div class="loading loading-ball w-24"></div>
    </div>
  </div>
  <Hero client:load projects={projects} />
  <section class="bg-accent relative">
    <h1
      class="absolute text-center top-16 max-md:top-8 max-md:text-4xl w-full text-6xl"
    >
      My story, briefly.
    </h1>
    <div
      id="videoMask"
      class="top-0 left-0 w-full h-full"
      style={{
        maskImage: "radial-gradient(circle, black 20%, rgb(0, 0, 0, 0) 20%)",
      }}
    >
      <video
        id="introVideo"
        autoplay
        loop
        muted
        controls
        playsinline
        class="w-full aspect-video max-md:h-96 object-cover"
      >
        <source src={introVideoURL} type="video/mp4" />
      </video>
    </div>
  </section>
  <section class="bg-secondary py-16 max-md:py-8 px-2">
    <div class="max-w-screen-lg mx-auto flex flex-col gap-8">
      <div
        class="grid grid-cols-2 max-md:grid-cols-1 grid-rows-1 gap-16 max-md:gap-8"
      >
        <h1
          class="md:hidden font-koulen text-8xl max-md:text-7xl font-extrabold text-center"
        >
          Meet The Boys
        </h1>
        <div class="flex flex-col gap-16 max-md:gap-8 max-md:order-1">
          <h1
            class="font-koulen max-md:hidden text-8xl max-md:text-7xl font-extrabold"
          >
            Meet The Boys
          </h1>
          <div id="bioText">
            <div
              class="whitespace-pre-line text-4xl max-md:text-3xl font-extralight"
            >
              <p id="bioText1">
                Grew up assisting my old man on his builds, and now I've been in
                the construction game full-time for over 10 years. Finally took
                the plunge to start our own last year! With my three dedicated
                brothers by my side, we're grinding hard—truly the best team.
              </p>
              <p id="bioText2" class="mt-8 max-md:mt-4">
                Couldn't have done it without them and our supportive crew—they
                know who they are. Out here showing that there are still
                hardworking builders who take immense pride in their craft!
                Leaders creating leaders.
              </p>
            </div>
          </div>
        </div>
        <div class="flex flex-col h-full max-md:h-[1000px] max-md:gap-4 gap-8">
          <div class="flex flex-col items-center flex-1 gap-1">
            <div
              class="relative aspect-[1/1.3] max-md:w-full h-full overflow-hidden"
            >
              <Image
                src={bioImg1}
                alt="bio image 1"
                class:list={[
                  "absolute top-0 aspect-video max-md:w-full h-full left-1/2 -translate-x-1/2 object-cover object-top ",
                ]}
              />
            </div>
            <h1 class="italic text-lg font-light">
              Freedom Anae Feulufai, owner of {config.businessName}
            </h1>
          </div>

          <div class="flex flex-col items-center flex-1 gap-1">
            <div class="relative w-full h-full flex-1 overflow-hidden">
              <Image
                src={bioImg3}
                alt="bio image 3"
                class:list={[
                  "absolute top-0 w-full left-1/2 -translate-x-1/2 object-cover h-full",
                ]}
              />
            </div>
            <h1 class="italic text-lg font-light">
              The {config.businessName} team at work
            </h1>
          </div>
        </div>
      </div>
      <div class="h-96 w-full">
        <Gallery client:only="react" />
      </div>
    </div>
  </section>
  <section class="bg-secondary" id="contact">
    <div
      class="max-w-screen-lg mx-auto flex flex-col items-center gap-16 max-md:gap-8 px-2"
    >
      <div class="flex flex-col items-center gap-4 font-koulen">
        <h1 class="text-8xl max-md:text-4xl font-extrabold text-center">
          If you have a vision
        </h1>
        <h2 class="text-8xl font-extrabold text-center max-md:text-6xl">
          We'll build it
        </h2>
      </div>
      <p class="text-2xl font-light">Contact us today</p>
      <form
        name="contact"
        method="POST"
        data-netlify="true"
        class="py-6 w-full flex flex-col gap-2 text-4xl max-md:text-2xl font-light"
      >
        <div
          class="rounded-2xl border-2 border-primary pt-8 pb-16 px-16 max-md:px-4"
        >
          {
            fields.map((field) => (
              <div class="flex gap-16 items-center border-b-2 border-black py-2">
                <label
                  for={field.name}
                  class="whitespace-nowrap min-w-32 max-md:min-w-12"
                >
                  {field.text}
                </label>
                {field.name === "message" ? (
                  <textarea
                    id={field.name}
                    name={field.name}
                    class="bg-transparent form-input px-4 h-96 py-3 w-full rounded focus:outline-none font-extralight"
                  />
                ) : (
                  <input
                    autocomplete="on"
                    type="text"
                    id={field.name}
                    name={field.name}
                    class="bg-transparent form-input px-4 py-3 w-full rounded focus:outline-none font-extralight"
                  />
                )}
              </div>
            ))
          }
        </div>
        <div class="flex text-[#e4ab97] w-full justify-center my-6">
          <input type="submit" value="Submit" class="btn btn-primary" />
        </div>
      </form>
    </div>
  </section>
</Layout>

<script>
  import gsap from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";
  import Lenis from "lenis";
  import SplitType from "split-type";

  // const lenis = new Lenis();

  // lenis.on("scroll", ScrollTrigger.update);

  // gsap.ticker.add((time) => {
  //   lenis.raf(time * 1000);
  // });

  // gsap.ticker.lagSmoothing(0);

  gsap.registerPlugin(ScrollTrigger);

  gsap.to("#videoMask", {
    scrollTrigger: {
      trigger: "#introVideo",
      start: "10% center",
      end: "center center",
      scrub: true,
    },
    maskImage: "radial-gradient(circle, black 100%, rgb(0, 0, 0, 0) 100%)",
  });

  new SplitType("#bioText1");
  new SplitType("#bioText2");
  gsap.fromTo(
    ".line",
    { color: "gray" },
    {
      color: "black",
      scrollTrigger: {
        trigger: "#bioText",
        start: "top center",
        end: "bottom center",
        scrub: true,
      },
      stagger: 0.1,
    }
  );

  const introTimeline = gsap.timeline({
    paused: true,
    onComplete: () => {
      if (bodyElement) {
        bodyElement.classList.remove("max-h-screen");
        bodyElement.classList.remove("overflow-hidden");
      }
    },
  });
  introTimeline
    .to("#loader", { xPercent: -100, ease: "power2.out", duration: 1 })
    .to("#loader", { display: "none" });

  const bodyElement = document.querySelector("body");
  if (bodyElement) {
    bodyElement.classList.add("max-h-screen");
    bodyElement.classList.add("overflow-hidden");
  }
  document.addEventListener("DOMContentLoaded", () => {
    const loader = document.getElementById("loader");
    const mediaElements = document.querySelectorAll("video");

    let loadedCount = 0;
    const totalMediaElements = mediaElements.length;
    const timeoutDuration = 5000; // 5 seconds
    let timeoutReached = false;

    const checkLoaded = () => {
      loadedCount++;
      if (loadedCount >= totalMediaElements) {
        if (loader) {
          introTimeline.play();
          clearTimeout(timeout);
        }
      }
    };

    const timeout = setTimeout(() => {
      timeoutReached = true;
      if (loader) {
        introTimeline.play();
      }
    }, timeoutDuration);

    mediaElements.forEach((media) => {
      if (media.readyState >= HTMLMediaElement.HAVE_ENOUGH_DATA) {
        checkLoaded();
      } else {
        media.addEventListener("loadeddata", () => {
          if (!timeoutReached) {
            checkLoaded();
          }
        });
        media.addEventListener("error", () => {
          if (!timeoutReached) {
            checkLoaded();
          }
        });
      }
    });
  });
</script>
